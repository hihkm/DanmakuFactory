name: "Build & Release"

on:
  push:
    branches:
      - master
    paths:
      - "**/*.c"
      - "**/*.h"
      - "**/CMakeLists.txt"
  workflow_dispatch:

concurrency:
  group: "build-release"
  cancel-in-progress: false

jobs:
  build:
    name: Build on ${{ matrix.platform }} (${{ matrix.arch }})
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    env:
      PROJECT_NAME: ${{ github.event.repository.name }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platform: Linux
            arch: x64

          - os: ubuntu-24.04-arm
            platform: Linux
            arch: arm64

          - os: macos-13
            platform: macOS
            arch: Intel

          - os: macos-latest
            platform: macOS
            arch: arm64

          - os: windows-latest
            platform: Windows
            arch: x64

          - os: windows-11-arm
            platform: Windows
            arch: arm64

    steps:
      - name: Checkout Git Repository
        uses: actions/checkout@v5
        with:
          submodules: "recursive"

      - name: Prepare Project Build
        uses: ./.github/actions/prepare-project-build

      - name: Build Project
        uses: threeal/cmake-action@v2.1.0
        with:
          options: CMAKE_BUILD_TYPE=Release
          build-args: --config Release --target ${{ env.PROJECT_NAME }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: package-${{ matrix.platform }}-${{ matrix.arch }}
          path: |
            build/**/${{ env.PROJECT_NAME }}
            build/**/${{ env.PROJECT_NAME }}.exe
          if-no-files-found: error
          retention-days: 1
          compression-level: 9

  release:
    name: Upload to GitHub Release
    runs-on: ubuntu-latest
    needs: build
    env:
      SOURCE_DIR: "artifacts"
      OUTPUT_DIR: "release-assets"

    permissions:
      contents: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v5

      - name: Prepare Release Assets
        id: prep_assets
        uses: ./.github/actions/prepare-release-assets
        with:
          source-dir: ${{ env.SOURCE_DIR }}
          output-dir: ${{ env.OUTPUT_DIR }}

      - name: Update dev Tag
        run: |
          git tag dev ${{ github.sha }}
          git push origin "refs/tags/dev" --force
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release to GitHub
        uses: softprops/action-gh-release@v2
        with:
          tag_name: dev
          name: Continuous dev Build
          body: Automated build from commit ${{ github.sha }}
          prerelease: true
          preserve_order: true
          files: ${{ env.OUTPUT_DIR }}/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
