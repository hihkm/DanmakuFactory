name: Build

on:
  push:
  workflow_dispatch:

jobs:
  prebuild:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    env:
      is_tag: ${{ startsWith(github.ref, 'refs/tags/') }}

    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Build Project
        uses: threeal/cmake-action@v2.1.0
        with:
          options: CMAKE_BUILD_TYPE=Release
          build-args: --config Release --target DanmakuFactory

      - run: ls build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        if: ${{ matrix.os == 'windows-latest' }}
        with:
          name: package-${{ runner.os }}
          path: build/Release/DanmakuFactory.exe
  
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        if: ${{ matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'  }}
        with:
          name: package-${{ runner.os }}
          path: build/DanmakuFactory


  prebuild-linux-arm:
    strategy:
      matrix:
        arch:
          - arm64
    name: Prebuild on Linux (${{ matrix.arch }})
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - uses: docker/setup-qemu-action@v3
      - run: |
          docker run --rm -v $(pwd):/tmp/project --entrypoint /bin/sh --platform linux/${{ matrix.arch }} ubuntu:latest -c "\
          apt-get update && \
          apt-get install -y make gcc cmake && \
          cd /tmp/project && \
          cmake -S . -B build && \
          cmake --build build --target DanmakuFactory"
      - name: Upload arm64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: package-linux-${{ matrix.arch }}
          path: build/DanmakuFactory

permissions:
  contents: write
